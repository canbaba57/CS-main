@using Newtonsoft.Json
@model List<CaseStudy.Frontend.Models.ProductResponseModel>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Product List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .color-dot {
            width: 16px;
            height: 16px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 6px;
            border: 2px solid transparent;
            cursor: pointer;
        }

        .color-dot.selected {
            border-color: black !important;
        }

        .carousel-control-prev,
        .carousel-control-next {
            width: 5%;
            opacity: 0.8;
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-color: rgba(0,0,0,0.6);
            border-radius: 50%;
            padding: 10px;
        }

        .products-carousel .carousel-item {
            padding: 0 20px;
        }

        .product-card {
            height: 100%;
            transition: transform 0.2s;
        }

        .product-card:hover {
            transform: translateY(-5px);
        }
    </style>
</head>
<body class="bg-white text-dark">

    <div class="container py-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="fw-light border-bottom pb-2">Product List</h2>
            <small class="text-muted">Avenir - Book - 45</small>
        </div>

        @if (Model != null && Model.Any())
        {
            <!-- Products Carousel -->
            <div id="products-carousel" class="carousel slide" data-bs-ride="false">
                <div class="carousel-inner">
                    @{
                        var productsPerSlide = 4; // Her slide'da 4 ürün
                        var totalSlides = (int)Math.Ceiling((double)Model.Count / productsPerSlide);
                        
                        for (int slideIndex = 0; slideIndex < totalSlides; slideIndex++)
                        {
                            var startIndex = slideIndex * productsPerSlide;
                            var endIndex = Math.Min(startIndex + productsPerSlide, Model.Count);
                            var slideProducts = Model.Skip(startIndex).Take(productsPerSlide).ToList();
                            
                            <div class="carousel-item @(slideIndex == 0 ? "active" : "")">
                                <div class="row g-4">
                                    @for (int i = 0; i < slideProducts.Count; i++)
                                    {
                                        var product = slideProducts[i];
                                        var globalIndex = startIndex + i;
                                        
                                        <div class="col-3">
                                            <div class="card border-0 shadow-sm product-card">
                                                <img id="product-image-@globalIndex" src="@product.yellowimage" class="card-img-top rounded" alt="@product.name" />
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">@product.name</h6>
                                                    <p class="text-muted">@product.price $</p>

                                                    <!-- Renk Seçimi -->
                                                    <div class="mb-2 d-flex justify-content-center" id="color-group-@globalIndex">
                                                        <span class="color-dot selected" style="background-color:#E6C3A7" onclick="selectColor(@globalIndex, 0, '@product.yellowimage', 'Yellow Gold')"></span>
                                                        <span class="color-dot" style="background-color:#D9D9D9" onclick="selectColor(@globalIndex, 1, '@product.whiteimage', 'White Gold')"></span>
                                                        <span class="color-dot" style="background-color:#E1AAA9" onclick="selectColor(@globalIndex, 2, '@product.roseimage', 'Rose Gold')"></span>
                                                    </div>

                                                    <p id="color-name-@globalIndex" class="text-muted small">Yellow Gold</p>

                                                    <!-- Rating -->
                                                    <div class="text-warning small">
                                                        @{
                                                            var fullStars = (int)Math.Round(product.popularityScore * 100);
                                                            fullStars /= 20;
                                                            var emptyStars = 5 - fullStars;
                                                        }
                                                        @for (int j = 0; j < fullStars; j++)
                                                        {
                                                            <span>★</span>
                                                        }
                                                        @for (int j = 0; j < emptyStars; j++)
                                                        {
                                                            <span class="text-muted">☆</span>
                                                        }

                                                        <span class="text-dark">@(((product.popularityScore * 5)).ToString("0.0")) / 5</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                </div>
                
                <!-- Carousel Controls -->
                <button class="carousel-control-prev" type="button" data-bs-target="#products-carousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#products-carousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
                
                <!-- Carousel Indicators -->
                <div class="carousel-indicators">
                    @for (int i = 0; i < totalSlides; i++)
                    {
                        <button type="button" data-bs-target="#products-carousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" aria-label="Slide @(i + 1)"></button>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function selectColor(groupIndex, colorIndex, imageUrl, colorName) {
            // Update color dots
            const group = document.getElementById(`color-group-${groupIndex}`);
            const dots = group.querySelectorAll(".color-dot");
            dots.forEach(dot => dot.classList.remove("selected"));
            dots[colorIndex].classList.add("selected");
            
            // Update product image
            const productImage = document.getElementById(`product-image-${groupIndex}`);
            productImage.src = imageUrl;
            
            // Update color name
            const colorNameElement = document.getElementById(`color-name-${groupIndex}`);
            colorNameElement.textContent = colorName;
        }
    </script>

</body>
</html>